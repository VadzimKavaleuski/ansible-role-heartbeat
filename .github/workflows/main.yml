---
name: CI

on: [push]

jobs:
  yamllint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: yaml-lint
        uses: ibiqlik/action-yamllint@master
        with:
          file_or_dir: ./
          config_file: .yamllint

#  ansible_lint:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: befor lint
#        run: git clone https://github.com/lean-delivery/ansible-lint-rules.git ./ansible-lint-rules
#      - name: Lint Ansible Playbook
#        uses: ansible/ansible-lint-action@master
#        with:
#          targets: "./"
#          args: ". -c .ansible-lint"

#  ansible_lint_docker:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/checkout@v2
#        with:
#          repository: 'lean-delivery/ansible-lint-rules'
#          path: './ansible-lint-rules'
#      - uses: docker://cytopia/ansible-lint
#        with:
#          args: ". -c .ansible-lint --force-color"
          # entrypoint: "ansible-lint -v -c .ansible-lint ./"

  ansible_lint_action:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: 'lean-delivery/ansible-lint-rules'
          path: './ansible-lint-rules'
      - uses: VadzimKavaleuski/ansible-lint@v1.04


#  lint_check:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: before_script
#        run: |
#            # sudo apt-get update
#            sudo apt-get install -y ansible-lint libssl-dev libffi-dev yamllint
#            ansible-lint --version
#      - name: yamllint
#        run: yamllint . -c .yamllint
#      - name: befor lint
#        run: git clone https://github.com/lean-delivery/ansible-lint-rules.git ./ansible-lint-rules
#      - name: ansible-lint
#        run: |
#          pwd
#          cat .ansible-lint
#          ls -la
#          ansible-lint . -c .ansible-lint --force-color
#      - name: after lint
#        run: rm -rf ./ansible-lint-rules

#  platform_test:
#    needs:
#      - yamllint
#      - ansible_lint_action
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: before_script
#        run: |
#            # sudo apt-get update
#            sudo apt-get install -y python-pip libssl-dev libffi-dev
#            sudo pip install --upgrade --user setuptools
#      - name: install molecule
#        run: |
#            sudo pip install molecule
#            sudo pip install 'molecule[docker]'
#      - name: before_script
#        run: |
#            rm -rf molecule/resources/provisioning
#            ansible --version
#            ansible-lint --version
#            molecule --version
#            git clone https://github.com/lean-delivery/ansible-molecule-drivers.git molecule/resources/provisioning
#      - name: deployment test
#        run: molecule test -s default

  platform_test_container:
    needs:
      - yamllint
      - ansible_lint_action
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: before_script
        run: rm -rf ./molecule/resources/provisioning
      - uses: actions/checkout@v2
        with:
          repository: 'lean-delivery/ansible-molecule-drivers'
          path: './molecule/resources/provisioning'
      # - uses: VadzimKavaleuski/docker-ansible-ci-action@v1.04
      # - uses: docker://leandelivery/docker-ansible-ci:ansible-2.8
      #   with:
      #     entrypoint: "pwd"
      # - uses: docker://leandelivery/docker-ansible-ci:ansible-2.8
      #   with:
      #     entrypoint: "ls"
      #     args: '-la'
      # - uses: docker://leandelivery/docker-ansible-ci:ansible-2.8
      #   with:
      #     entrypoint: "ls"
      #     args: './molecule/resources/provisioning -la'
      - uses: docker://leandelivery/docker-ansible-ci:ansible-2.8
        with:
          entrypoint: molecule
          args: 'test --help'
      - uses: docker://leandelivery/docker-ansible-ci:ansible-2.8
        with:
          entrypoint: molecule
          args: test -s default

  # platform_test_aws:
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{secrets.aws_access_key_id}}
  #     AWS_SECRET_ACCESS_KEY: ${{secrets.aws_secret_access_key}}
  #     EC2_REGION: 'us-east-1'
  #     # MOLECULE_DEBUG: true
  #   # needs: lint_check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: before_script
  #       run: |
  #           sudo apt-get update
  #           sudo apt-get install -y python-pip libssl-dev libffi-dev
  #           sudo pip install --upgrade --user setuptools
  #     - name: install molecule
  #       run: sudo pip install molecule boto boto3 botocore
  #     # - name: prepare aws creds
  #     #   run: |
  #     #       mkdir .aws
  #     #       touch .aws/credentials
  #     #       echo "[default]\n" >>.aws/credentials
  #     #       echo aws_access_key_id=$aws_access_key_id\n >>.aws/credentials
  #     #       echo aws_secret_access_key=$aws_secret_access_key\n >>.aws/credentials
  #     #       cat .aws/credentials
  #     - name: before_script
  #       run: |
  #           # rm -rf molecule/resources/provisioning
  #           ip address
  #           ansible --version
  #           ansible-lint --version
  #           molecule --version
  #           pip list boto | grep boto
  #     - name: deployment test
  #       run: molecule test -s cloud-aws-direct
  # platform_test_azure:
  #   env:
  #     AZURE_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
  #     AZURE_SECRET: ${{secrets.AZURE_SECRET}}
  #     AZURE_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
  #     AZURE_TENANT: ${{secrets.AZURE_TENANT}}
  #     EC2_REGION: 'us-east-1'
  #     MOLECULE_DEBUG: true
  #   # needs: lint_check
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: before_script
  #       run: |
  #           sudo apt-get update
  #           sudo apt-get install -y python-pip libssl-dev libffi-dev
  #           sudo pip install --upgrade --user setuptools
  #     - name: install  molecule
  #       run: sudo pip install molecule msrestazure ansible[azure]
  #     - name: before_script
  #       run: |
  #           # rm -rf molecule/resources/provisioning
  #           ansible --version
  #           ansible-lint --version
  #           molecule --version
  #           # git clone https://github.com/lean-delivery/ansible-molecule-drivers.git molecule/resources/provisioning
  #     - name: deployment test
  #       run: molecule test -s cloud-azure-direct
